=== Reddit Sentiment Analysis Model Summary ===

MODEL IMPROVEMENTS:
------------------------------
1. Implemented temporal train-test split to preserve chronological order
2. Removed potential leakage features (daily_return, ma_crossover)
3. Used class weights instead of SMOTE to handle imbalance
4. Implemented FinBERT for improved financial sentiment analysis

DATA LIMITATIONS:
------------------------------
1. Limited aligned trading-day records (~414) from ~3 years of sentiment data
2. High missingness rates in several sentiment aggregates
3. Potential residual leakage in high-correlation features

FEATURE IMPORTANCE:
------------------------------
40. ma20: 0.0848
29. comment_score_sum: 0.0518
41. prev_return: 0.0498
10. selftext_compound_std: 0.0479
37. Volume_AMD: 0.0464
17. post_score_sum: 0.0412
26. comment_count: 0.0399
34. High_AMD: 0.0336
30. comment_score_std: 0.0332
33. Close_AMD: 0.0303

MODEL PERFORMANCE:
------------------------------
RandomForest:
  Accuracy: 0.6494
  Balanced Accuracy: 0.6167
  Macro F1: 0.5761

XGBoost:
  Accuracy: 0.7143
  Balanced Accuracy: 0.6857
  Macro F1: 0.6671


OPTIMAL FEATURE SETS:
------------------------------
Optimal RandomForest features (11):
  1. ma20
  2. comment_score_sum
  3. prev_return
  4. selftext_compound_std
  5. Volume_AMD
  6. post_score_sum
  7. comment_count
  8. High_AMD
  9. comment_score_std
  10. Close_AMD
  11. selftext_compound_mean

Optimal XGBoost features (23):
  1. ma20
  2. comment_score_sum
  3. prev_return
  4. selftext_compound_std
  5. Volume_AMD
  6. post_score_sum
  7. comment_count
  8. High_AMD
  9. comment_score_std
  10. Close_AMD
  11. selftext_compound_mean
  12. post_upvote_ratio_median
  13. post_count
  14. post_upvote_ratio_mean
  15. post_score_std
  16. compound_sentiment_std
  17. comment_score_median
  18. Low_AMD
  19. ma5
  20. post_score_median
  21. post_comments_std
  22. comment_score_log
  23. post_comments_median

RECOMMENDATIONS FOR FUTURE WORK:
------------------------------
1. Scale the dataset – ingest more sub-reddits and broaden date range
2. Implement strict walk-forward evaluation with expanding windows
3. Implement economic back-testing to measure risk-adjusted returns
4. Conduct ongoing leakage audits and feature pruning
